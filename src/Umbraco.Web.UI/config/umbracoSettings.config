<?xml version="1.0" encoding="utf-8" ?>
<settings>

    <backOffice>
        <tours enable="true"></tours>
    </backOffice>

  <content>
    <imaging>
      <!-- what file extension that should cause umbraco to create thumbnails -->
      <imageFileTypes>jpeg,jpg,gif,bmp,png,tiff,tif,svg</imageFileTypes>
      <!-- what attributes that are allowed in the editor on an img tag -->
      <allowedAttributes>src,alt,border,class,style,align,id,name,onclick,usemap</allowedAttributes>
      <!-- automatically updates dimension, filesize and extension attributes on upload -->
      <autoFillImageProperties>
        <uploadField alias="umbracoFile">
          <widthFieldAlias>umbracoWidth</widthFieldAlias> 
          <heightFieldAlias>umbracoHeight</heightFieldAlias>
          <lengthFieldAlias>umbracoBytes</lengthFieldAlias>
          <extensionFieldAlias>umbracoExtension</extensionFieldAlias>
        </uploadField>
      </autoFillImageProperties>

    </imaging>
    <scripteditor>
      <!-- Path to script folder - no ending "/" -->
      <scriptFolderPath>/scripts</scriptFolderPath>
      <!-- what files can be opened/created in the script editor -->
      <scriptFileTypes>js,xml</scriptFileTypes>
      <!-- disable the codemirror editor and use a simple textarea instead -->
      <scriptDisableEditor>false</scriptDisableEditor>
    </scripteditor>

    <!-- should umbraco store the uploaded files like /media/xxx/filename.ext or like /media/xxx-filename.ext
		should be set to false if the application pool's user account hasn't got readrights of the driveroot up to the /media directory -->
    <UploadAllowDirectories>True</UploadAllowDirectories>
    <errors>
      <!-- the id of the page that should be shown if the page is not found -->
      <!--<error404>
                   <errorPage culture="default">1</errorPage>
                   <errorPage culture="en-US">200</errorPage>
            </error404>-->
      <error404>
        <errorPage culture="default">1</errorPage>
        <errorPage culture="fr-FR">1079</errorPage>
        <errorPage culture="en-US">1080</errorPage>
      </error404>
    </errors>
    <notifications>
      <!-- the email that should be used as from mail when umbraco sends a notification -->
      <!-- you can add a display name to the email like this: <email>Your display name here &lt;your@email.here&gt;</email> -->
      <email>your@email.here</email>
    </notifications>

    <!-- if true umbraco will ensure that no page under the same parent has an identical name -->
    <ensureUniqueNaming>True</ensureUniqueNaming>

    <!-- Whether to force safe aliases (no spaces, no special characters) at businesslogic level on contenttypes and propertytypes -->
    <!-- HIGHLY recommend to keep this to true to ensure valid and beautiful XML Schemas -->
    <ForceSafeAliases>true</ForceSafeAliases>

    <!-- Enable / disable xml content cache -->
    <XmlCacheEnabled>True</XmlCacheEnabled>

    <!-- Update disk cache every time content has changed -->
    <ContinouslyUpdateXmlDiskCache>True</ContinouslyUpdateXmlDiskCache>

    <!-- Update in-memory cache if xml file is changed -->
    <XmlContentCheckForDiskChanges>False</XmlContentCheckForDiskChanges>

    <!-- Show the /config/splashes/booting.aspx page while initializing content -->
    <EnableSplashWhileLoading>False</EnableSplashWhileLoading>

    <!-- Show property descriptions in editing view "icon|text|none" -->
    <PropertyContextHelpOption>text</PropertyContextHelpOption>

    <!-- The html injected into a (x)html page if Umbraco is running in preview mode -->
    <PreviewBadge>
      <![CDATA[
      <a id="umbracoPreviewBadge" style="z-index:99999; position: absolute; top: 0; right: 0; border: 0; width: 149px; height: 149px; background: url('{0}/assets/img/preview-mode-badge.png') no-repeat;" href="#" OnClick="javascript:window.top.location.href = '{0}/preview/end?redir={1}'"><span style="display:none;">In Preview Mode - click to end</span></a>
    ]]></PreviewBadge>


    <!-- Url Resolving ensures that all links works if you run Umbraco in virtual directories -->
    <!-- Setting this to true can increase render time for pages with a large number of links -->
    <!-- If running Umbraco in virtual directory this *must* be set to true! -->
    <ResolveUrlsFromTextString>false</ResolveUrlsFromTextString>

    <!-- How Umbraco should handle errors during macro execution. Can be one of the following values:
         - inline - show an inline error within the macro but allow the page to continue rendering. Historial Umbraco behaviour.
         - silent - Silently suppress the error and do not render the offending macro.
         - throw  - Throw an exception which can be caught by the global error handler defined in Application_OnError. If no such
                    error handler is defined then you'll see the Yellow Screen Of Death (YSOD) error page.
         Note the error can also be handled by the umbraco.macro.Error event, where you can log/alarm with your own code and change the behaviour per event. -->
    <MacroErrors>throw</MacroErrors>

    <!-- These file types will not be allowed to be uploaded via the upload control for media and content -->
    <disallowedUploadFiles>ashx,aspx,ascx,config,cshtml,vbhtml,asmx,air,axd,swf,xml,xhtml,html,htm,php,htaccess</disallowedUploadFiles>

    <!-- If completed, only the file extensions listed below will be allowed to be uploaded.  If empty, disallowedUploadFiles will apply to prevent upload of specific file extensions. -->
    <allowedUploadFiles></allowedUploadFiles>

    <!-- Defines the default document type property used when adding properties in the back-office (if missing or empty, defaults to Textstring -->
    <defaultDocumentTypeProperty>Textstring</defaultDocumentTypeProperty>

    <showDeprecatedPropertyEditors>false</showDeprecatedPropertyEditors>

    <!-- Enables value converters for all built in property editors so that they return strongly typed object, recommended for use with Models Builder -->
    <!--
    <EnablePropertyValueConverters>true</EnablePropertyValueConverters>
    -->

    <!-- You can specify your own background image for the login screen here. The image will automatically get an overlay to match back office colors - this path is relative to the ~/umbraco path. The default location is: /umbraco/assets/img/installer.jpg -->
    <loginBackgroundImage>assets/img/installer.jpg</loginBackgroundImage>

  </content>

  <security>
    <!-- set to true to auto update login interval (and there by disabling the lock screen -->
    <keepUserLoggedIn>true</keepUserLoggedIn>

    <!-- change in 4.8: Disabled users are now showed dimmed and last in the tree. If you prefer not to display them set this to true -->
    <hideDisabledUsersInBackoffice>false</hideDisabledUsersInBackoffice>

    <!-- set to true to enable the UI and API to allow back-office users to reset their passwords -->
    <allowPasswordReset>true</allowPasswordReset>

  </security>

  <requestHandler>
    <!-- this will ensure that urls are unique when running with multiple root nodes -->
    <useDomainPrefixes>false</useDomainPrefixes>
    <!-- this will add a trailing slash (/) to urls when in directory url mode -->
    <addTrailingSlash>true</addTrailingSlash>
    <urlReplacing removeDoubleDashes="true" toAscii="try">
      <char org=" ">-</char>
      <char org="&quot;"></char>
      <char org="'"></char>
      <char org="%"></char>
      <char org="."></char>
      <char org=";"></char>
      <char org="/"></char>
      <char org="\"></char>
      <char org=":"></char>
      <char org="#"></char>
      <char org="+">plus</char>
      <char org="*">star</char>
      <char org="&amp;"></char>
      <char org="?"></char>
      <char org="Ã¦">ae</char>
      <char org="Ã¸">oe</char>
      <char org="Ã¥">aa</char>
      <char org="Ã¤">ae</char>
      <char org="Ã¶">oe</char>
      <char org="Ã¼">ue</char>
      <char org="ÃŸ">ss</char>
      <char org="Ã„">ae</char>
      <char org="Ã–">oe</char>
      <char org="|">-</char>
      <char org="&lt;"></char>
      <char org="&gt;"></char>
    </urlReplacing>
  </requestHandler>

  <templates>
    <!-- To switch the default rendering engine to MVC, change this value from WebForms to Mvc -->
    <defaultRenderingEngine>Mvc</defaultRenderingEngine>
  </templates>

  <!--
		Now that we have external logging enabled, this section is only used for what gets logged to the umbracoLog table
		which currently logs items used in the audit trail and roll back scenarios.
		-->
  <logging>
    <enableLogging>true</enableLogging>
    <enableAsyncLogging>true</enableAsyncLogging>
    <disabledLogTypes>
      <!-- <logTypeAlias>[alias-of-log-type-in-lowercase]</logTypeAlias> -->
    </disabledLogTypes>
    <!-- You can add your own logging tool by implementing the umbraco.BusinessLogic.Interfaces.ILog interface and add the reference here -->
    <!-- The external logger can also act as the audit trail storage by setting the logAuditTrail attribute to true -->
    <!--<externalLogger assembly="~/bin/assemblyFileName.dll" type="fully.qualified.namespace.and.type" logAuditTrail="false" /> -->
  </logging>

  <scheduledTasks>
    <!-- add tasks that should be called with an interval (seconds) -->
    <!--    <task log="true" alias="test60" interval="60" url="http://localhost/umbraco/test.aspx"/>-->
  </scheduledTasks>

  <providers>
    <users>
      <!-- if you wish to use your own membershipprovider for authenticating to the umbraco back office -->
      <!-- specify it here (remember to add it to the web.config as well) -->
      <DefaultBackofficeProvider>UsersMembershipProvider</DefaultBackofficeProvider>
    </users>
  </providers>

  <!--
    web.routing
      @trySkipIisCustomErrors
        Tries to skip IIS custom errors.
        Starting with IIS 7.5, this must be set to true for Umbraco 404 pages to show. Else, IIS will take
        over and render its built-in error page. See MS doc for HttpResponseBase.TrySkipIisCustomErrors.
        The default value is false, for backward compatibility reasons, which means that IIS _will_ take
        over, and _prevent_ Umbraco 404 pages to show.
      @internalRedirectPreservesTemplate
        By default as soon as we're not displaying the initial document, we reset the template set by the
        finder or by the alt. template. Set this option to true to preserve the template set by the finder
        or by the alt. template, in case of an internal redirect.
        (false by default, and in fact should remain false unless you know what you're doing)
      @disableAlternativeTemplates
        By default you can add a altTemplate querystring or append a template name to the current URL which
        will make Umbraco render the content on the current page with the template you requested, for example:
        http://mysite.com/about-us/?altTemplate=Home and http://mysite.com/about-us/Home would render the
        "About Us" page with a template with the alias Home. Setting this setting to true stops that behavior
      @validateAlternativeTemplates
        By default you can add a altTemplate querystring or append a template name to the current URL which
        will make Umbraco render the content on the current page with the template you requested, for example:
        http://mysite.com/about-us/?altTemplate=Home and http://mysite.com/about-us/Home would render the 
        "About Us" page with a template with the alias Home. Setting this setting to true will ensure that 
        only templates that have been permitted on the document type will be allowed
      @disableFindContentByIdPath
        By default you can call any content Id in the url and show the content with that id, for example:
        http://mysite.com/1092 or http://mysite.com/1092.aspx would render the content with id 1092. Setting
        this setting to true stops that behavior
      @umbracoApplicationUrl
        The url of the Umbraco application. By default, Umbraco will figure it out from the first request.
        Configure it here if you need anything specific. Needs to be a complete url with scheme and umbraco
        path, eg http://mysite.com/umbraco. NOT just "mysite.com" or "mysite.com/umbraco" or "http://mysite.com".
  -->
  <web.routing
    trySkipIisCustomErrors="false"
    internalRedirectPreservesTemplate="false" disableAlternativeTemplates="false" validateAlternativeTemplates="false" disableFindContentByIdPath="false"
    umbracoApplicationUrl="">
  </web.routing>

</settings>
