<?xml version="1.0" encoding="utf-8" ?>
<settings>

  <!-- 
    umbracoSettings.config configuration documentation can be found here: 
    http://our.umbraco.org/documentation/using-umbraco/config-files/umbracoSettings/
    Many of the optional settings are not explicitly listed here 
    but can be found in the online documentation.
    -->
  
  <content>
    
    <errors>
      <error404>1</error404>
      <!--
        <error404>
            <errorPage culture="default">1</errorPage>
            <errorPage culture="en-US">200</errorPage>
        </error404>
       -->      
    </errors>
    
    <notifications>
      <!-- the email that should be used as from mail when umbraco sends a notification -->
      <email>your@email.here</email>
    </notifications>

    <!-- Show property descriptions in editing view "icon|text|none" -->
    <PropertyContextHelpOption>text</PropertyContextHelpOption>

    <!-- The html injected into a (x)html page if Umbraco is running in preview mode -->
    <PreviewBadge>
      <![CDATA[<a id="umbracoPreviewBadge" style="position: absolute; top: 0; right: 0; border: 0; width: 149px; height: 149px; background: url('{1}/preview/previewModeBadge.png') no-repeat;z-index: 9999999;" href="#" OnClick="javascript:window.top.location.href = '{0}/endPreview.aspx?redir={2}'"><span style="display:none;">In Preview Mode - click to end</span></a>]]></PreviewBadge>

    <!-- Cache cycle of Media and Member data fetched from the umbraco.library methods -->
    <!-- In seconds. 0 will disable cache -->
    <UmbracoLibraryCacheDuration>1800</UmbracoLibraryCacheDuration>

    <!-- How Umbraco should handle errors during macro execution. Can be one of the following values:
         - inline - show an inline error within the macro but allow the page to continue rendering. Historial Umbraco behaviour.
         - silent - Silently suppress the error and do not render the offending macro.
         - throw  - Throw an exception which can be caught by the global error handler defined in Application_OnError. If no such
                    error handler is defined then you'll see the Yellow Screen Of Death (YSOD) error page.
         Note the error can also be handled by the umbraco.macro.Error event, where you can log/alarm with your own code and change the behaviour per event. -->
    <MacroErrors>inline</MacroErrors>

    <!-- These file types will not be allowed to be uploaded via the upload control for media and content -->
    <disallowedUploadFiles>ashx,aspx,ascx,config,cshtml,vbhtml,asmx,air,axd,swf,xml,html,htm,svg,php,htaccess</disallowedUploadFiles>

    <!-- Defines the default document type property used when adding properties in the back-office (if missing or empty, defaults to Textstring -->
    <defaultDocumentTypeProperty>Textstring</defaultDocumentTypeProperty>
  </content>

  <security>
    <!-- set to true to auto update login interval (and there by disabling the lock screen -->
    <keepUserLoggedIn>false</keepUserLoggedIn>
    <!-- change in 4.8: Disabled users are now showed dimmed and last in the tree. If you prefer not to display them set this to true -->
    <hideDisabledUsersInBackoffice>false</hideDisabledUsersInBackoffice>
  </security>

  <requestHandler>
    <!-- this will ensure that urls are unique when running with multiple root nodes -->
    <useDomainPrefixes>false</useDomainPrefixes>
    <!-- this will add a trailing slash (/) to urls when in directory url mode -->
    <addTrailingSlash>true</addTrailingSlash>   
  </requestHandler>

  <templates>
    <!-- To switch the default rendering engine to MVC, change this value from WebForms to Mvc -->
    <defaultRenderingEngine>Mvc</defaultRenderingEngine>
  </templates>

  <scheduledTasks>
    <!-- add tasks that should be called with an interval (seconds) -->
    <!--    <task log="true" alias="test60" interval="60" url="http://localhost/umbraco/test.aspx"/>-->
  </scheduledTasks>

  <!-- distributed calls must be enabled when using Umbraco in a load balanced environment -->
  <distributedCall enable="false">
    <!-- the id of the user who's making the calls -->
    <!-- needed for security, umbraco will automatically look up correct login and passwords -->
    <user>0</user>

    <!--
    When distributed call is enabled, you need to add all of the servers part taking in load balancing
    to the server list below. 
    -->

    <servers>

      <!-- 
      Add ip number or hostname, make sure that it can be reached from all servers
      you can also add optional attributes to force a protocol or port number.
      
      Examples:
      
      <server>127.0.0.1</server>
      <server forceProtocol="http|https" forcePortnumber="80|443">127.0.0.1</server>
      
      Generally when setting up load balancing you will designate a 'master' server, 
      Umbraco will always assume that the FIRST server listed in this list is the 'master'.
      (NOTE: Not all load balancing scenarios have a 'master', depends on how you are setting it up)
      
      In order for scheduled tasks (including scheduled publishing) to work properly when load balancing, each 
      server in the load balanced environment needs to know if it is the 'master'. In order for servers
      to know this or not, they need to compare some values against the servers listed. These values
      are either: serverName or appId. You should not enter both values but appId will always supersede serverName.
      The serverName is the easiest and will work so long as you are not load balancing your site on the same server.
      If you are doing this, then you will need to use appId which is equivalent to the value returned from
      HttpRuntime.AppDomainAppId. It is recommended that you set either the serverName or appId for all servers 
      registered here if possible, not just the first one.
      
      Examples:
      
      <server serverName="MyServer">server1.mysite.com</server>      
      <server appId="/LM/W3SVC/69/ROOT">server1.mysite.com</server>      
      -->

    </servers>
  </distributedCall>

  <!-- 
    web.routing
      @trySkipIisCustomErrors
        Tries to skip IIS custom errors.
        Starting with IIS 7.5, this must be set to true for Umbraco 404 pages to show. Else, IIS will take
        over and render its build-in error page. See MS doc for HttpResponseBase.TrySkipIisCustomErrors.
        The default value is false, for backward compatibility reasons, which means that IIS _will_ take
        over, and _prevent_ Umbraco 404 pages to show.
      @internalRedirectPreservesTemplate
        By default as soon as we're not displaying the initial document, we reset the template set by the
        finder or by the alt. template. Set this option to true to preserve the template set by the finder
        or by the alt. template, in case of an internal redirect.
        (false by default, and in fact should remain false unless you know what you're doing)
  -->
  <web.routing
    trySkipIisCustomErrors="false"
    internalRedirectPreservesTemplate="false">
  </web.routing>

</settings>
