// This file is auto-generated by @hey-api/openapi-ts

export type VerifyResetPasswordTokenRequestModel = {
    user: ReferenceByIdModel;
    resetCode: string;
};

export type ReferenceByIdModel = {
    id: string;
};

export type VerifyResetPasswordResponseModel = {
    passwordConfiguration: PasswordConfigurationResponseModel;
};

export type PasswordConfigurationResponseModel = {
    minimumPasswordLength: number;
    requireNonLetterOrDigit: boolean;
    requireDigit: boolean;
    requireLowercase: boolean;
    requireUppercase: boolean;
};

export type VerifyInviteUserResponseModel = {
    passwordConfiguration: PasswordConfigurationResponseModel;
};

export type VerifyInviteUserRequestModel = {
    user: ReferenceByIdModel;
    token: string;
};

export type ResetPasswordTokenRequestModel = {
    user: ReferenceByIdModel;
    resetCode: string;
    password: string;
};

export type ResetPasswordRequestModel = {
    email: string;
};

export type ProblemDetailsBuilderModel = {
    [key: string]: never;
};

export type ProblemDetails = {
    type?: string | null;
    title?: string | null;
    status?: number | null;
    detail?: string | null;
    instance?: string | null;
    [key: string]: unknown | (string | null) | (string | null) | (number | null) | (string | null) | (string | null) | undefined;
};

export type NotificationHeaderModel = {
    message: string;
    category: string;
    type: EventMessageTypeModel;
};

export enum EventMessageTypeModel {
    DEFAULT = 'Default',
    INFO = 'Info',
    ERROR = 'Error',
    SUCCESS = 'Success',
    WARNING = 'Warning'
}

export type CreateInitialPasswordUserRequestModel = {
    user: ReferenceByIdModel;
    token: string;
    password: string;
};

export type PostSecurityForgotPasswordData = {
    body?: ResetPasswordRequestModel;
    path?: never;
    query?: never;
    url: '/umbraco/management/api/v1/security/forgot-password';
};

export type PostSecurityForgotPasswordErrors = {
    /**
     * Bad Request
     */
    400: ProblemDetails;
    /**
     * The resource is protected and requires an authentication token
     */
    401: unknown;
    /**
     * The authenticated user does not have access to this resource
     */
    403: unknown;
};

export type PostSecurityForgotPasswordError = PostSecurityForgotPasswordErrors[keyof PostSecurityForgotPasswordErrors];

export type PostSecurityForgotPasswordResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type PostSecurityForgotPasswordResetData = {
    body?: ResetPasswordTokenRequestModel;
    path?: never;
    query?: never;
    url: '/umbraco/management/api/v1/security/forgot-password/reset';
};

export type PostSecurityForgotPasswordResetErrors = {
    /**
     * Bad Request
     */
    400: ProblemDetailsBuilderModel;
    /**
     * The resource is protected and requires an authentication token
     */
    401: unknown;
    /**
     * The authenticated user does not have access to this resource
     */
    403: unknown;
    /**
     * Not Found
     */
    404: ProblemDetailsBuilderModel;
};

export type PostSecurityForgotPasswordResetError = PostSecurityForgotPasswordResetErrors[keyof PostSecurityForgotPasswordResetErrors];

export type PostSecurityForgotPasswordResetResponses = {
    /**
     * No Content
     */
    204: void;
};

export type PostSecurityForgotPasswordResetResponse = PostSecurityForgotPasswordResetResponses[keyof PostSecurityForgotPasswordResetResponses];

export type PostSecurityForgotPasswordVerifyData = {
    body?: VerifyResetPasswordTokenRequestModel;
    path?: never;
    query?: never;
    url: '/umbraco/management/api/v1/security/forgot-password/verify';
};

export type PostSecurityForgotPasswordVerifyErrors = {
    /**
     * Bad Request
     */
    400: ProblemDetailsBuilderModel;
    /**
     * Not Found
     */
    404: ProblemDetailsBuilderModel;
};

export type PostSecurityForgotPasswordVerifyError = PostSecurityForgotPasswordVerifyErrors[keyof PostSecurityForgotPasswordVerifyErrors];

export type PostSecurityForgotPasswordVerifyResponses = {
    /**
     * OK
     */
    200: VerifyResetPasswordResponseModel;
};

export type PostSecurityForgotPasswordVerifyResponse = PostSecurityForgotPasswordVerifyResponses[keyof PostSecurityForgotPasswordVerifyResponses];

export type PostUserInviteCreatePasswordData = {
    body?: CreateInitialPasswordUserRequestModel;
    path?: never;
    query?: never;
    url: '/umbraco/management/api/v1/user/invite/create-password';
};

export type PostUserInviteCreatePasswordErrors = {
    /**
     * Bad Request
     */
    400: ProblemDetails;
    /**
     * The authenticated user does not have access to this resource
     */
    403: unknown;
    /**
     * Not Found
     */
    404: ProblemDetails;
};

export type PostUserInviteCreatePasswordError = PostUserInviteCreatePasswordErrors[keyof PostUserInviteCreatePasswordErrors];

export type PostUserInviteCreatePasswordResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type PostUserInviteVerifyData = {
    body?: VerifyInviteUserRequestModel;
    path?: never;
    query?: never;
    url: '/umbraco/management/api/v1/user/invite/verify';
};

export type PostUserInviteVerifyErrors = {
    /**
     * Bad Request
     */
    400: ProblemDetails;
    /**
     * The authenticated user does not have access to this resource
     */
    403: unknown;
    /**
     * Not Found
     */
    404: ProblemDetails;
};

export type PostUserInviteVerifyError = PostUserInviteVerifyErrors[keyof PostUserInviteVerifyErrors];

export type PostUserInviteVerifyResponses = {
    /**
     * OK
     */
    200: VerifyInviteUserResponseModel;
};

export type PostUserInviteVerifyResponse = PostUserInviteVerifyResponses[keyof PostUserInviteVerifyResponses];

export type ClientOptions = {
    baseUrl: `${string}://${string}` | (string & {});
};