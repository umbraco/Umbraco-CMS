<?xml version="1.0" encoding="utf-8" ?>
<settings>
  <content>
    <imaging>
      <!-- what file extension that should cause umbraco to create thumbnails -->
      <imageFileTypes>jpeg,jpg,gif,bmp,png,tiff,tif</imageFileTypes>
      <!-- what attributes that are allowed in the editor on an img tag -->
      <allowedAttributes>src,alt,border,class,style,align,id,name,onclick,usemap</allowedAttributes>
      <!-- automatically updates dimension, filesize and extension attributes on upload -->
      <autoFillImageProperties>
        <uploadField alias="umbracoFile">
          <widthFieldAlias>umbracoWidth</widthFieldAlias>
          <heightFieldAlias>umbracoHeight</heightFieldAlias>
          <lengthFieldAlias>umbracoBytes</lengthFieldAlias>
          <extensionFieldAlias>umbracoExtension</extensionFieldAlias>
        </uploadField>
        <uploadField alias="umbracoFile2">
          <widthFieldAlias>umbracoWidth2</widthFieldAlias>
          <heightFieldAlias>umbracoHeight2</heightFieldAlias>
          <lengthFieldAlias>umbracoBytes2</lengthFieldAlias>
          <extensionFieldAlias>umbracoExtension2</extensionFieldAlias>
        </uploadField>
      </autoFillImageProperties>      
    </imaging>
    <scripteditor>
      <!-- Path to script folder - no ending "/" -->
      <scriptFolderPath>/scripts</scriptFolderPath>
      <!-- what files can be opened/created in the script editor -->
      <scriptFileTypes>js,xml</scriptFileTypes>
      <!-- disable the codemirror editor and use a simple textarea instead -->
      <scriptDisableEditor>false</scriptDisableEditor>
    </scripteditor>

    <!-- should umbraco store the uploaded files like /media/xxx/filename.ext or like /media/xxx-filename.ext
		should be set to false if the application pool's user account hasn't got readrights of the driveroot up to the /media directory -->
    <UploadAllowDirectories>True</UploadAllowDirectories>
    <errors>
      <!-- the id of the page that should be shown if the page is not found -->
      <!--<error404>
                   <errorPage culture="default">1</errorPage>
                   <errorPage culture="en-US">200</errorPage>
            </error404>-->
      <error404>
        <errorPage culture="default">1047</errorPage>
        <errorPage culture="en-US">$site/error [@name = 'error']</errorPage>
        <errorPage culture="en-UK">8560867F-B88F-4C74-A9A4-679D8E5B3BFC</errorPage>
      </error404>
      <!--<error404>1</error404>-->
    </errors>
    <notifications>
      <!-- the email that should be used as from mail when umbraco sends a notification -->
      <email>robot@umbraco.dk</email>
      <disableHtmlEmail>true</disableHtmlEmail>
    </notifications>

    <!-- if true umbraco will ensure that no page under the same parent has an identical name -->
    <ensureUniqueNaming>True</ensureUniqueNaming>

    <!-- clean editor content with use of tidy -->
    <TidyEditorContent>False</TidyEditorContent>

    <!-- the encoding type for tidy. Default is Raw, options are ASCII, Raw, Latin1, UTF8, ISO2022, MacroMan-->
    <TidyCharEncoding>Raw</TidyCharEncoding>

    <!-- Enable / disable xml content cache -->
    <XmlCacheEnabled>True</XmlCacheEnabled>

    <!-- Update disk cache every time content has changed -->
    <ContinouslyUpdateXmlDiskCache>True</ContinouslyUpdateXmlDiskCache>

    <!-- Update in-memory cache if xml file is changed -->
    <XmlContentCheckForDiskChanges>True</XmlContentCheckForDiskChanges>

    <!-- Show the /config/splashes/booting.aspx page while initializing content -->
    <EnableSplashWhileLoading>False</EnableSplashWhileLoading>

    <!-- Show property descriptions in editing view "icon|text|none" -->
    <PropertyContextHelpOption>text</PropertyContextHelpOption>

    <UseLegacyXmlSchema>false</UseLegacyXmlSchema>

    <cloneXmlContent>true</cloneXmlContent>

    <ForceSafeAliases>true</ForceSafeAliases>

    <PreviewBadge><![CDATA[<a id="umbracoPreviewBadge" style="position: absolute; top: 0; right: 0; border: 0; width: 149px; height: 149px; background: url('{1}/preview/previewModeBadge.png') no-repeat;" href="{0}/endPreview.aspx?redir={2}"><span style="display:none;">In Preview Mode - click to end</span></a>]]></PreviewBadge>

    <!-- Cache cycle of Media and Member data fetched from the umbraco.library methods -->
    <!-- In seconds. 0 will disable cache -->
    <UmbracoLibraryCacheDuration>1800</UmbracoLibraryCacheDuration>

    <!-- How Umbraco should handle errors during macro execution. Can be one of the following values:
             - inline - show an inline error within the macro but allow the page to continue rendering. Historial Umbraco behaviour.
             - silent - Silently suppress the error and do not render the offending macro.
             - throw  - Throw an exception which can be caught by the global error handler defined in Application_OnError. If no such
                        error handler is defined then you'll see the Yellow Screen Of Death (YSOD) error page.
             Note the error can also be handled by the umbraco.macro.Error event, where you can log/alarm with your own code and change the behaviour per event. -->
    <MacroErrors>inline</MacroErrors>
    
    <!-- These file types will not be allowed to be uploaded via the upload control for media and content -->
    <disallowedUploadFiles>ashx,aspx,ascx,config,cshtml,vbhtml,asmx,air,axd</disallowedUploadFiles>

    <!-- Defines the default document type property used when adding properties in the back-office (if missing or empty, defaults to Textstring -->
    <defaultDocumentTypeProperty>Textstring</defaultDocumentTypeProperty>
  </content>

  <security>
    <!-- set to true to auto update login interval (and there by disabling the lock screen -->
    <keepUserLoggedIn>true</keepUserLoggedIn>

    <!-- change in 4.8: Disabled users are now showed dimmed and last in the tree. If you prefer not to display them set this to true -->
    <hideDisabledUsersInBackoffice>false</hideDisabledUsersInBackoffice>

    <!-- set to true to enable the UI and API to allow back-office users to reset their passwords -->
    <allowPasswordReset>true</allowPasswordReset>

  </security>

  <requestHandler>
    <!-- this will ensure that urls are unique when running with multiple root nodes -->
    <useDomainPrefixes>false</useDomainPrefixes>
    <!-- this will add a trailing slash (/) to urls when in directory url mode -->
    <addTrailingSlash>true</addTrailingSlash>
    <urlReplacing removeDoubleDashes="true">
      <char org=" ">-</char>
      <char org="&quot;"></char>
      <char org="'"></char>
      <char org="%"></char>
      <char org="."></char>
      <char org=";"></char>
      <char org="/"></char>
      <char org="\"></char>
      <char org=":"></char>
      <char org="#"></char>
      <char org="+">plus</char>
      <char org="*">star</char>
      <char org="&amp;"></char>
      <char org="?"></char>
      <char org="æ">ae</char>
      <char org="ø">oe</char>
      <char org="å">aa</char>
      <char org="ä">ae</char>
      <char org="ö">oe</char>
      <char org="ü">ue</char>
      <char org="ß">ss</char>
      <char org="Ä">ae</char>
      <char org="Ö">oe</char>
      <char org="|">-</char>
      <char org="&lt;"></char>
      <char org="&gt;"></char>
    </urlReplacing>
  </requestHandler>

  <templates>
    <useAspNetMasterPages>true</useAspNetMasterPages>
    <enableSkinSupport>true</enableSkinSupport>
    <defaultRenderingEngine>Mvc</defaultRenderingEngine>
  </templates>

  <!-- this is used by Umbraco to determine if there's valid classes in the /App_Code folder to be used for Rest/XSLT extensions -->
  <developer>
    <appCodeFileExtensions>
      <ext>cs</ext>
      <ext>vb</ext>
    </appCodeFileExtensions>
  </developer>

  <scripting>
    <razor>
      <!-- razor DynamicNode typecasting detects XML and returns DynamicXml - Root elements that won't convert to DynamicXml -->
      <notDynamicXmlDocumentElements>
        <element>p</element>
        <element>div</element>
        <element>ul</element>
        <element>span</element>
      </notDynamicXmlDocumentElements>
      <dataTypeModelStaticMappings>
        <mapping dataTypeGuid="A3DB4034-BCB0-4E69-B3EE-DD4E6ECA74C2">MyName.1</mapping>
        <mapping nodeTypeAlias="textPage2" propertyTypeAlias="propertyAlias2">MyName.2</mapping>
        <mapping dataTypeGuid="BD14E709-45BE-431C-B228-6255CDEDFCD5" nodeTypeAlias="textPage3" propertyTypeAlias="propertyAlias3">MyName.3</mapping>
        <mapping dataTypeGuid="FCE8187E-0366-4833-953A-E5ECA11AA23A" nodeTypeAlias="textPage4">MyName.4</mapping>
        <mapping dataTypeGuid="9139315A-6681-4C45-B89F-BE48D30F9AB9" propertyTypeAlias="propertyAlias5">MyName.5</mapping>
        <mapping propertyTypeAlias="propertyAlias6">MyName.6</mapping>
      </dataTypeModelStaticMappings>
    </razor>
  </scripting>

  <viewstateMoverModule enable="false" />

  <logging>
    <autoCleanLogs>false</autoCleanLogs>
    <enableLogging>true</enableLogging>
    <enableAsyncLogging>true</enableAsyncLogging>
    <disabledLogTypes>
      <logTypeAlias>[alias-of-log-type-in-lowercase]</logTypeAlias>
      <logTypeAlias>anotherlogalias</logTypeAlias>
    </disabledLogTypes>
    <cleaningMiliseconds>86400</cleaningMiliseconds>
    <maxLogAge>1440</maxLogAge>
    <externalLogger assembly="~/bin/assemblyFileName.dll" type="fully.qualified.namespace.and.type" logAuditTrail="false" />
  </logging>

  <scheduledTasks>
    <!-- add tasks that should be called with an interval (seconds) -->
    <task log="true" alias="test60" interval="60" url="http://localhost/umbraco/test.aspx"/>
    <task log="false" alias="testtest" interval="61" url="http://localhost/umbraco/test1.aspx"/>
  </scheduledTasks>

  <!-- distributed calls make umbraco use webservices to handle cache refreshing -->
  <distributedCall enable="true">
    <!-- the id of the user who's making the calls -->
    <!-- needed for security, umbraco will automatically look up correct login and passwords -->
    <user>0</user>
    <servers>
      <!-- add ip number or hostname, make sure that it can be reached from all servers -->
      <!-- you can also add optional attributes to force a protocol or port number (see #2) -->
      <server>127.0.0.1</server>
      <server forceProtocol="https" forcePortnumber="443">127.0.0.2</server>
    </servers>
  </distributedCall>

  <!-- Configuration for repositories -->
  <!-- Add or remove repositories here. You will need the repository's unique key to be able to connect to it.-->
  <repositories>
    <repository name="Umbraco package Repository" guid="65194810-1f85-11dd-bd0b-0800200c9a66" />
    <repository name="Test Repo" guid="163245E0-CD22-44B6-841A-1B9B9D2E955F" />
  </repositories>

  <providers>
    <users>
      <!-- if you wish to use your own membershipprovider for authenticating to the umbraco back office -->
      <!-- specify it here (remember to add it to the web.config as well) -->
      <DefaultBackofficeProvider>UsersMembershipProvider</DefaultBackofficeProvider>
    </users>
  </providers>

  <!-- Maps language, usertype, application and application_url to help pages -->
  <help defaultUrl="http://our.umbraco.org/wiki/umbraco-help/{0}/{1}">
    <!-- Add links that should open custom help pages -->
    <link application="content" applicationUrl="dashboard.aspx"  language="en" userType="Administrators" helpUrl="http://www.xyz.no?{0}/{1}/{2}/{3}" />
    <link application="media" applicationUrl="dashboard2.aspx"  language="ch" userType="Writers" helpUrl="http://www.abc.no?{0}/{1}/{2}/{3}" />
  </help>

  <!-- 
    web.routing
      @trySkipIisCustomErrors
        Tries to skip IIS custom errors.
        Starting with IIS 7.5, this must be set to true for Umbraco 404 pages to show. Else, IIS will take
        over and render its built-in error page. See MS doc for HttpResponseBase.TrySkipIisCustomErrors.
        The default value is false, for backward compatibility reasons, which means that IIS _will_ take
        over, and _prevent_ Umbraco 404 pages to show.
      @internalRedirectPreservesTemplate
        By default as soon as we're not displaying the initial document, we reset the template set by the
        finder or by the alt. template. Set this option to true to preserve the template set by the finder
        or by the alt. template, in case of an internal redirect.
        (false by default, and in fact should remain false unless you know what you're doing)
  -->
  <web.routing
    trySkipIisCustomErrors="false"
    internalRedirectPreservesTemplate="false">
  </web.routing>

</settings>