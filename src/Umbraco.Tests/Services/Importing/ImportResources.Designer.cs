//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Umbraco.Tests.Services.Importing {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class ImportResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ImportResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Umbraco.Tests.Services.Importing.ImportResources", typeof(ImportResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;
        ///&lt;umbPackage&gt;
        ///  &lt;files /&gt;
        ///  &lt;info&gt;
        ///    &lt;package&gt;
        ///      &lt;name&gt;CheckboxListTest&lt;/name&gt;
        ///      &lt;version&gt;1&lt;/version&gt;
        ///      &lt;license url=&quot;http://www.opensource.org/licenses/mit-license.php&quot;&gt;MIT license&lt;/license&gt;
        ///      &lt;url&gt;1&lt;/url&gt;
        ///      &lt;requirements&gt;
        ///        &lt;major&gt;3&lt;/major&gt;
        ///        &lt;minor&gt;0&lt;/minor&gt;
        ///        &lt;patch&gt;0&lt;/patch&gt;
        ///      &lt;/requirements&gt;
        ///    &lt;/package&gt;
        ///    &lt;author&gt;
        ///      &lt;name&gt;1&lt;/name&gt;
        ///      &lt;website&gt;1&lt;/website&gt;
        ///    &lt;/author&gt;
        ///    &lt;r [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CheckboxList_Content_Package {
            get {
                return ResourceManager.GetString("CheckboxList_Content_Package", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;
        ///&lt;umbPackage&gt;
        ///  &lt;files /&gt;
        ///  &lt;info&gt;
        ///    &lt;package&gt;
        ///      &lt;name&gt;CheckboxListTest&lt;/name&gt;
        ///      &lt;version&gt;1&lt;/version&gt;
        ///      &lt;license url=&quot;http://www.opensource.org/licenses/mit-license.php&quot;&gt;MIT license&lt;/license&gt;
        ///      &lt;url&gt;1&lt;/url&gt;
        ///      &lt;requirements&gt;
        ///        &lt;major&gt;3&lt;/major&gt;
        ///        &lt;minor&gt;0&lt;/minor&gt;
        ///        &lt;patch&gt;0&lt;/patch&gt;
        ///      &lt;/requirements&gt;
        ///    &lt;/package&gt;
        ///    &lt;author&gt;
        ///      &lt;name&gt;1&lt;/name&gt;
        ///      &lt;website&gt;1&lt;/website&gt;
        ///    &lt;/author&gt;
        ///    &lt;r [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CheckboxList_Content_Package_LegacyIds {
            get {
                return ResourceManager.GetString("CheckboxList_Content_Package_LegacyIds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;
        ///&lt;umbPackage&gt;
        ///  &lt;files /&gt;
        ///  &lt;info&gt;
        ///    &lt;package&gt;
        ///      &lt;name&gt;Compositions Packaged&lt;/name&gt;
        ///      &lt;version&gt;1.0&lt;/version&gt;
        ///      &lt;license url=&quot;http://opensource.org/licenses/MIT&quot;&gt;MIT License&lt;/license&gt;
        ///      &lt;url&gt;http://blog.sitereactor.dk&lt;/url&gt;
        ///      &lt;requirements&gt;
        ///        &lt;major&gt;3&lt;/major&gt;
        ///        &lt;minor&gt;0&lt;/minor&gt;
        ///        &lt;patch&gt;0&lt;/patch&gt;
        ///      &lt;/requirements&gt;
        ///    &lt;/package&gt;
        ///    &lt;author&gt;
        ///      &lt;name&gt;Morten Christensen&lt;/name&gt;
        ///      &lt;website&gt;h [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CompositionsTestPackage {
            get {
                return ResourceManager.GetString("CompositionsTestPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;
        ///&lt;umbPackage&gt;
        ///  &lt;files /&gt;
        ///  &lt;info&gt;
        ///    &lt;package&gt;
        ///      &lt;name&gt;Composite Test&lt;/name&gt;
        ///      &lt;version&gt;dfsfd&lt;/version&gt;
        ///      &lt;license url=&quot;http://opensource.org/licenses/MIT&quot;&gt;MIT License&lt;/license&gt;
        ///      &lt;url&gt;ddsff&lt;/url&gt;
        ///      &lt;requirements&gt;
        ///        &lt;major&gt;3&lt;/major&gt;
        ///        &lt;minor&gt;0&lt;/minor&gt;
        ///        &lt;patch&gt;0&lt;/patch&gt;
        ///      &lt;/requirements&gt;
        ///    &lt;/package&gt;
        ///    &lt;author&gt;
        ///      &lt;name&gt;fsdfds&lt;/name&gt;
        ///      &lt;website&gt;sfdf&lt;/website&gt;
        ///    &lt;/author&gt;
        ///    &lt;rea [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CompositionsTestPackage_Random {
            get {
                return ResourceManager.GetString("CompositionsTestPackage_Random", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;
        ///&lt;umbPackage&gt;
        ///  &lt;files /&gt;
        ///  &lt;info&gt;
        ///    &lt;package&gt;
        ///      &lt;name&gt;Dictionary-Package&lt;/name&gt;
        ///      &lt;version&gt;1.0&lt;/version&gt;
        ///      &lt;license url=&quot;http://www.opensource.org/licenses/mit-license.php&quot;&gt;MIT license&lt;/license&gt;
        ///      &lt;url&gt;http://not.available&lt;/url&gt;
        ///      &lt;requirements&gt;
        ///        &lt;major&gt;3&lt;/major&gt;
        ///        &lt;minor&gt;0&lt;/minor&gt;
        ///        &lt;patch&gt;0&lt;/patch&gt;
        ///      &lt;/requirements&gt;
        ///    &lt;/package&gt;
        ///    &lt;author&gt;
        ///      &lt;name&gt;Test&lt;/name&gt;
        ///      &lt;website&gt;http://not.available&lt;/w [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Dictionary_Package {
            get {
                return ResourceManager.GetString("Dictionary_Package", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;
        ///&lt;umbPackage&gt;
        ///  &lt;files&gt;
        ///    &lt;file&gt;
        ///      &lt;guid&gt;bootstrap.min.js&lt;/guid&gt;
        ///      &lt;orgPath&gt;/js&lt;/orgPath&gt;
        ///      &lt;orgName&gt;bootstrap.min.js&lt;/orgName&gt;
        ///    &lt;/file&gt;
        ///    &lt;file&gt;
        ///      &lt;guid&gt;jquery.min.js&lt;/guid&gt;
        ///      &lt;orgPath&gt;/js&lt;/orgPath&gt;
        ///      &lt;orgName&gt;jquery.min.js&lt;/orgName&gt;
        ///    &lt;/file&gt;
        ///    &lt;file&gt;
        ///      &lt;guid&gt;top-image.jpg&lt;/guid&gt;
        ///      &lt;orgPath&gt;/Media/1001&lt;/orgPath&gt;
        ///      &lt;orgName&gt;top-image.jpg&lt;/orgName&gt;
        ///    &lt;/file&gt;
        ///    &lt;file&gt;
        ///      &lt;guid&gt;top-im [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Fanoe_Package {
            get {
                return ResourceManager.GetString("Fanoe_Package", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;
        ///&lt;umbPackage&gt;
        ///  &lt;files /&gt;
        ///  &lt;info&gt;
        ///    &lt;package&gt;
        ///      &lt;name&gt;DocTypeError&lt;/name&gt;
        ///      &lt;version&gt;1&lt;/version&gt;
        ///      &lt;license url=&quot;http://www.opensource.org/licenses/mit-license.php&quot;&gt;Personal license&lt;/license&gt;
        ///      &lt;url&gt;http://www.iseli-webconsulting.de&lt;/url&gt;
        ///      &lt;requirements&gt;
        ///        &lt;major&gt;3&lt;/major&gt;
        ///        &lt;minor&gt;0&lt;/minor&gt;
        ///        &lt;patch&gt;0&lt;/patch&gt;
        ///      &lt;/requirements&gt;
        ///    &lt;/package&gt;
        ///    &lt;author&gt;
        ///      &lt;name&gt;Iseli Webconsulting&lt;/name&gt; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string InheritedDocTypes_Package {
            get {
                return ResourceManager.GetString("InheritedDocTypes_Package", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;
        ///&lt;DocumentType&gt;
        ///  &lt;Info&gt;
        ///    &lt;Name&gt;test&lt;/Name&gt;
        ///    &lt;Alias&gt;test&lt;/Alias&gt;
        ///    &lt;Icon&gt;folder.gif&lt;/Icon&gt;
        ///    &lt;Thumbnail&gt;folder.png&lt;/Thumbnail&gt;
        ///    &lt;Description&gt;
        ///    &lt;/Description&gt;
        ///    &lt;AllowAtRoot&gt;False&lt;/AllowAtRoot&gt;
        ///    &lt;AllowedTemplates&gt;
        ///      &lt;Template&gt;test&lt;/Template&gt;
        ///    &lt;/AllowedTemplates&gt;
        ///    &lt;DefaultTemplate&gt;test&lt;/DefaultTemplate&gt;
        ///  &lt;/Info&gt;
        ///  &lt;Structure&gt;
        ///    &lt;DocumentType&gt;test&lt;/DocumentType&gt;
        ///  &lt;/Structure&gt;
        ///  &lt;GenericProperties&gt;
        ///    &lt;GenericProperty&gt; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SingleDocType {
            get {
                return ResourceManager.GetString("SingleDocType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;
        ///&lt;umbPackage&gt;
        ///  &lt;files&gt;
        ///    &lt;file&gt;
        ///      &lt;guid&gt;Map.cshtml&lt;/guid&gt;
        ///      &lt;orgPath&gt;/macroScripts&lt;/orgPath&gt;
        ///      &lt;orgName&gt;Map.cshtml&lt;/orgName&gt;
        ///    &lt;/file&gt;
        ///    &lt;file&gt;
        ///      &lt;guid&gt;AccountController.cs&lt;/guid&gt;
        ///      &lt;orgPath&gt;/App_Code&lt;/orgPath&gt;
        ///      &lt;orgName&gt;AccountController.cs&lt;/orgName&gt;
        ///    &lt;/file&gt;
        ///    &lt;file&gt;
        ///      &lt;guid&gt;ContactController.cs&lt;/guid&gt;
        ///      &lt;orgPath&gt;/App_Code&lt;/orgPath&gt;
        ///      &lt;orgName&gt;ContactController.cs&lt;/orgName&gt;
        ///    &lt;/file&gt;
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string StandardMvc_Package {
            get {
                return ResourceManager.GetString("StandardMvc_Package", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;
        ///&lt;umbPackage&gt;
        ///  &lt;files /&gt;
        ///  &lt;info&gt;
        ///    &lt;package&gt;
        ///      &lt;name&gt;Template-Update&lt;/name&gt;
        ///      &lt;version&gt;0.1&lt;/version&gt;
        ///      &lt;license url=&quot;http://www.opensource.org/licenses/mit-license.php&quot;&gt;MIT license&lt;/license&gt;
        ///      &lt;url&gt;https://our.umbraco.com/projects&lt;/url&gt;
        ///      &lt;requirements&gt;
        ///        &lt;major&gt;3&lt;/major&gt;
        ///        &lt;minor&gt;0&lt;/minor&gt;
        ///        &lt;patch&gt;0&lt;/patch&gt;
        ///      &lt;/requirements&gt;
        ///    &lt;/package&gt;
        ///    &lt;author&gt;
        ///      &lt;name&gt;Morten Christensen&lt;/name&gt;
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string TemplateOnly_Package {
            get {
                return ResourceManager.GetString("TemplateOnly_Package", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;
        ///&lt;umbPackage&gt;
        ///  &lt;files /&gt;
        ///  &lt;info&gt;
        ///    &lt;package&gt;
        ///      &lt;name&gt;Template-Update&lt;/name&gt;
        ///      &lt;version&gt;0.1&lt;/version&gt;
        ///      &lt;license url=&quot;http://www.opensource.org/licenses/mit-license.php&quot;&gt;MIT license&lt;/license&gt;
        ///      &lt;url&gt;https://our.umbraco.com/projects&lt;/url&gt;
        ///      &lt;requirements&gt;
        ///        &lt;major&gt;3&lt;/major&gt;
        ///        &lt;minor&gt;0&lt;/minor&gt;
        ///        &lt;patch&gt;0&lt;/patch&gt;
        ///      &lt;/requirements&gt;
        ///    &lt;/package&gt;
        ///    &lt;author&gt;
        ///      &lt;name&gt;Morten Christensen&lt;/name&gt;
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string TemplateOnly_Updated_Package {
            get {
                return ResourceManager.GetString("TemplateOnly_Updated_Package", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;
        ///&lt;umbPackage&gt;
        ///  &lt;files&gt;
        ///    &lt;file&gt;
        ///      &lt;guid&gt;uBlogsy.BusinessLogic.dll&lt;/guid&gt;
        ///      &lt;orgPath&gt;/bin&lt;/orgPath&gt;
        ///      &lt;orgName&gt;uBlogsy.BusinessLogic.dll&lt;/orgName&gt;
        ///    &lt;/file&gt;
        ///    &lt;file&gt;
        ///      &lt;guid&gt;uBlogsy.BusinessLogic.pdb&lt;/guid&gt;
        ///      &lt;orgPath&gt;/bin&lt;/orgPath&gt;
        ///      &lt;orgName&gt;uBlogsy.BusinessLogic.pdb&lt;/orgName&gt;
        ///    &lt;/file&gt;
        ///    &lt;file&gt;
        ///      &lt;guid&gt;uBlogsy.Common.dll&lt;/guid&gt;
        ///      &lt;orgPath&gt;/bin&lt;/orgPath&gt;
        ///      &lt;orgName&gt;uBlogsy.Common.dll&lt;/orgNam [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string uBlogsy_Package {
            get {
                return ResourceManager.GetString("uBlogsy_Package", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;
        ///&lt;umbPackage&gt;
        ///  &lt;files&gt;
        ///    &lt;file&gt;
        ///      &lt;guid&gt;XSLTsearch.xslt&lt;/guid&gt;
        ///      &lt;orgPath&gt;/xslt&lt;/orgPath&gt;
        ///      &lt;orgName&gt;XSLTsearch.xslt&lt;/orgName&gt;
        ///    &lt;/file&gt;
        ///    &lt;file&gt;
        ///      &lt;guid&gt;XSLTsearch.cs&lt;/guid&gt;
        ///      &lt;orgPath&gt;/App_Code&lt;/orgPath&gt;
        ///      &lt;orgName&gt;XSLTsearch.cs&lt;/orgName&gt;
        ///    &lt;/file&gt;
        ///  &lt;/files&gt;
        ///  &lt;info&gt;
        ///    &lt;package&gt;
        ///      &lt;name&gt;XSLTsearch&lt;/name&gt;
        ///      &lt;version&gt;3.0.4&lt;/version&gt;
        ///      &lt;license url=&quot;http://www.opensource.org/licenses/mit-li [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string XsltSearch_Package {
            get {
                return ResourceManager.GetString("XsltSearch_Package", resourceCulture);
            }
        }
    }
}
