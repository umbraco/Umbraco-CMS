parameters:
  - name: SA_PASSWORD
    type: string
    default: ''

  - name: buildConfiguration
    type: string
    default: ''

  - name: additionalEnvironmentVariables
    type: boolean
    default: false

steps:
  # Start SQL Server Linux
  - powershell: docker run --name mssql -d -p 1433:1433 -e "ACCEPT_EULA=Y" -e "MSSQL_SA_PASSWORD=${{parameters.SA_PASSWORD}}" mcr.microsoft.com/mssql/server:2022-latest
    displayName: Start SQL Server Docker image (Linux)
    condition: and(succeeded(), eq(variables['Agent.OS'], 'Linux'))

  - powershell: |
      $maxAttempts = 12
      $attempt = 0
      $status = ""

      while (($status -ne 'running') -and ($attempt -lt $maxAttempts)) {
        Start-Sleep -Seconds 5
        $status = docker inspect -f '{{.State.Status}}' mssql

        if ($status -ne 'running') {
          Write-Host "Waiting for SQL Server to be ready... Attempt $($attempt + 1)"
          $attempt++
        }
      }

      if ($status -eq 'running') {
        Write-Host "SQL Server container is running"
        docker ps -a
      } else {
        Write-Host "SQL Server did not become ready in time. Last known status: $status"
        docker logs mssql
        exit 1
      }
    displayName: Wait for SQL Server to be ready (Linux)
    condition: and(succeeded(), eq(variables['Agent.OS'], 'Linux'))

  # Start SQL Server LocalDB Windows
  - pwsh: SqlLocalDB start MSSQLLocalDB
    displayName: Start SQL Server LocalDB (Windows)
    condition: and(succeeded(), eq(variables['Agent.OS'], 'Windows_NT'))

  - pwsh: echo ${{parameters.additionalEnvironmentVariables}}

  - ${{ if eq(parameters.additionalEnvironmentVariables, false) }}:
      # Run application for Linux
      - bash: |
          nohup dotnet run --project UmbracoProject --configuration ${{parameters.buildConfiguration}} --no-build --no-launch-profile > $(Build.ArtifactStagingDirectory)/playwright.log 2>&1 &
          echo "##vso[task.setvariable variable=AcceptanceTestProcessId]$!"
        displayName: Run application (Linux)
        condition: and(succeeded(), eq(variables['Agent.OS'], 'Linux'))
        workingDirectory: $(Agent.BuildDirectory)/app

      # Run application for Windows
      - pwsh: |
          $process = Start-Process dotnet "run --project UmbracoProject --configuration ${{parameters.buildConfiguration}} --no-build --no-launch-profile 2>&1" -PassThru -NoNewWindow -RedirectStandardOutput $(Build.ArtifactStagingDirectory)/playwright.log
          Write-Host "##vso[task.setvariable variable=AcceptanceTestProcessId]$($process.Id)"
        displayName: Run application (Windows)
        condition: and(succeeded(), eq(variables['Agent.OS'], 'Windows_NT'))
        workingDirectory: $(Agent.BuildDirectory)/app
